# Basic workflow
name: Grade Reports

# Controls when the action will run. Workflow begins with push or PR events.
# Focuses on the main branch only.
on:
  push:
    branches: [ main, update-readme ]
  pull_request:
    branches: [ main, update-readme ]

# Create one single job. This job performs all necessary checks.
jobs:
  grade:
    # do not allow a grade to run for more than 10 minutes
    timeout-minutes: 5
    # Use the latest version of Ubuntu
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Performs all actions on different versions of Python
        python-version: ["3.10"]
        os: [ubuntu-latest]

    # Define the workflow steps.
    steps:
      # Checkout the code of the repository.
      - name: Check out Repository Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Install pip
      - name: Install Pip
        if: always()
        run: |
          pip install -U pip
          python -m pip install --user pipx
      # Run GatorGrader: see config/gatorgrade.yml
      - name: Run GatorGrader with GatorGrade
        if: always()
        run:  |
          pip install gatorgrade
          gatorgrade --config config/gatorgrade.yml
      # Check for Delete-mark comments in files, but only for the update_readme branch.
      - name: Check for Delete-mark
        if: github.ref == 'refs/heads/update_readme'
        run: |
          ! grep -L "Delete-mark" README.md || (echo "Delete-mark found in README.md" && false)
      # Get the current time
      - name: Get the Current Time
        uses: josStorer/get-current-time@v2
        if: always()
        id: current-time
        with:
          format: YYYYMMDD-HH-mm-ss
          utcOffset: "-05:00"
      # Signify 10% Success if all steps passed
      - name: Signify 10% Success
        if: success()
        run: |
          echo "All previous steps passed successfully, marking 10% completion."